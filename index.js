(()=>{"use strict";var t={149:function(t,e,n){var i=this&&this.__createBinding||(Object.create?function(t,e,n,i){void 0===i&&(i=n),Object.defineProperty(t,i,{enumerable:!0,get:function(){return e[n]}})}:function(t,e,n,i){void 0===i&&(i=n),t[i]=e[n]}),l=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),o=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)"default"!==n&&Object.prototype.hasOwnProperty.call(t,n)&&i(e,t,n);return l(e,t),e};Object.defineProperty(e,"__esModule",{value:!0}),e.GlobalEvents=void 0;const a=o(n(344));e.GlobalEvents=class{constructor(){this.globalState=new a.default,this.ev=new Event("none"),this.onclick=t=>{this.ev=t,this.ifClickOnLink()},this.ifClickOnLink=()=>{if(this.anchorIsLocalLink){this.ev.preventDefault();const t=this.ev.target.getAttribute("localLink");this.globalState=new a.default(a.PageType.article),console.log(t),console.log(this.globalState)}},document.onclick=this.onclick}get anchorIsLocalLink(){return this.ev.target instanceof HTMLAnchorElement&&this.ev.target.hasAttribute("localLink")}}},344:(t,e)=>{var n;Object.defineProperty(e,"__esModule",{value:!0}),e.PageType=void 0,function(t){t[t.home=0]="home",t[t.article=1]="article"}(n=e.PageType||(e.PageType={})),e.default=class{constructor(t=n.home){this.pageType=t,this.toString=()=>`Global State: {pageType: ${this.pageTypeAsString}}`}get pageTypeAsString(){return Object.values(n)[this.pageType]}}},576:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class n extends HTMLElement{constructor(){super(),this.link=null,this.text=null,this.article=null,this.fetchArticle=()=>{null!=this.link&&fetch(this.link).then((t=>t.text())).then((t=>{const e=(new DOMParser).parseFromString(t,"text/html");this.article=e.querySelector("article")}))},this.template=document.createElement("template"),this.template.innerHTML='\n      <style>\n        a {\n          color: #E67D40;\n          text-decoration: none;\n        }\n      </style>\n      <a href=""></a>\n    ',this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(this.template.content.cloneNode(!0))}connectedCallback(){this.link=this.getAttribute("link"),this.text=this.getAttribute("text");const t=this.shadowRoot.querySelector("a");t.href=this.link,t.innerText=this.text}}e.default=n,n.tag="local-link"},607:function(t,e,n){var i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const l=n(149),o=i(n(576));customElements.define(o.default.tag,o.default),new l.GlobalEvents}},e={};!function n(i){if(e[i])return e[i].exports;var l=e[i]={exports:{}};return t[i].call(l.exports,l,l.exports,n),l.exports}(607)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,