(()=>{"use strict";var e={692:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0});class i extends HTMLElement{constructor(){super();const e=document.createElement("template");e.innerHTML=i.template,this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(e.content.cloneNode(!0))}connectedCallback(){const e=document.querySelectorAll("sub"),t=this.shadowRoot.querySelector("footer"),i=e.length;for(let n=0;n<i;n++)t.appendChild(e[n]),t.append(document.createElement("br"))}}t.default=i,i.tag="article-footer",i.template="\n    <style>\n      hr {\n        margin-left: 0px;\n        border: none;\n        max-width: 150px;\n        width: 35vw;\n        height: 0.75px;\n        color: var(--text-color);\n        background-color: var(--text-color);\n      }\n      \n      a {\n        color: #95c379;\n        text-decoration: none;\n      }\n    </style>\n    \n    <br />\n    <br />\n    <br />\n    <hr />\n    <footer></footer>\n  "},109:function(e,t,i){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=i(587),a=n(i(576));class l extends HTMLElement{constructor(){super(),this.article={index:0,title:"",link:"",date:0,language:o.Language.english,mainTopic:o.Topic.go,otherTopics:[o.Topic.go]},this.tr=document.createElement("tr"),this.rowIndex=()=>{const e=document.createElement("td");e.innerHTML=this.article.index.toString(),this.tr.append(e)},this.rowArticle=()=>{const e=document.createElement("td");e.append(new a.default(this.article.link,this.article.title)),this.tr.append(e)},this.rowDate=()=>{const e=document.createElement("td"),t=new Date(this.article.date);e.append(`${t.toLocaleDateString("default",{month:"short"})} ${t.getDate()}, ${t.getFullYear()}`),this.tr.append(e)},this.rowLanguage=()=>{const e=document.createElement("td");e.append(this.article.language.toString()),this.tr.append(e)},this.rowMainTopic=()=>{const e=document.createElement("td");e.append(this.article.mainTopic.toString()),this.tr.append(e)},this.rowOtherTopics=()=>{const e=document.createElement("td"),t=0==this.article.otherTopics.length?String.fromCharCode(8212):this.article.otherTopics.join(", ");e.append(t),this.tr.append(e)};const e=document.createElement("template");e.innerHTML=l.template,this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(e.content.cloneNode(!0))}connectedCallback(){const e=this.shadowRoot.querySelector("tbody");o.articlesMetadata.forEach((t=>{this.article=t,this.tr=document.createElement("tr"),this.rowIndex(),this.rowDate(),this.rowLanguage(),this.rowArticle(),this.rowMainTopic(),this.rowOtherTopics(),e.append(this.tr)}))}}t.default=l,l.tag="articles-table",l.template='\n    <link rel="stylesheet" href="index.css" />\n\n    <table>\n      <caption>Articles</caption>\n      <thead>\n        <th>#</th>\n        <th>Date</th>\n        <th>Language</th>\n        <th>Article</th>\n        <th>Main Topic</th>\n        <th>Other Topics</th>\n      </thead>\n      <tbody></tbody>\n    </table>\n  '},384:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0});class i extends HTMLElement{constructor(){super();const e=document.createElement("template");e.innerHTML=i.template,this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(e.content.cloneNode(!0))}}t.default=i,i.tag="fanaro-nav",i.template='\n    <style>\n      a {\n        display: inline-flex;\n        align-items: center;\n        font-size: 1.5rem;\n        color: var(--text-color);\n        text-decoration: none;\n      }\n      img {\n        padding-right: 10px;\n      }\n    </style>\n    \n    <nav>\n      <a href="/">\n        <img height="50" src="/assets/logo_400.png" />\n        <h1>fanaro.io</h1>\n      </a>\n    </nav>\n  '},506:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0});class i extends HTMLElement{constructor(e=""){super(),this._text="",this.nextIndex=1,this.calculateNextIndex=()=>{const e=document.querySelector("article").querySelectorAll("foot-note").length;this.nextIndex=e},this.editSup=()=>{const e=this.shadowRoot.querySelector("a");e.innerHTML=this.nextIndex.toString(),e.href="#footnote-"+this.nextIndex.toString(),this.shadowRoot.querySelector("sup").id="footnote-base-"+this.nextIndex.toString()},this.editSub=()=>{const e=document.createElement("a");e.innerHTML=this.nextIndex.toString(),e.href="#footnote-base-"+this.nextIndex.toString(),e.style.color=i.anchorColor;const t=document.createElement("sub");t.id="footnote-"+this.nextIndex.toString(),t.innerHTML=": "+this._text,t.prepend(e),document.querySelector("article").append(t)},this._text=e;const t=document.createElement("template");t.innerHTML=i.template,this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(t.content.cloneNode(!0))}get text(){return this._text}connectedCallback(){""==this._text&&(this._text=this.getAttribute("text")),this.calculateNextIndex(),this.editSup(),this.editSub()}}t.default=i,i.tag="foot-note",i.anchorColor="#D9C07B",i.template=`\n    <style>\n      a {\n        color: ${i.anchorColor};\n        text-decoration: none;\n      }\n\n      sup {\n        color: ${i.anchorColor};\n      }\n    </style>\n    \n    <sup><a></a></sup>\n  `},576:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0});class i extends HTMLElement{constructor(e="",t=""){super(),this._link=e,this._text=t;const n=document.createElement("template");n.innerHTML=i.template,this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(n.content.cloneNode(!0))}get link(){return this._link}get text(){return this._text}connectedCallback(){""!=this._link&&""!=this._text||(this._link=this.getAttribute("link"),this._text=this.getAttribute("text"));const e=this.shadowRoot.querySelector("a");e.href=this._link,e.text=this._text}}t.default=i,i.tag="local-link",i.template="\n    <style>\n      a {\n        color: #E67D40;\n        text-decoration: none;\n      }\n    </style>\n    \n    <a></a>\n  "},729:function(e,t,i){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=n(i(109)),a=n(i(692)),l=n(i(384)),s=n(i(506)),r=n(i(576));t.default=class{constructor(){this.article=null,this.define=()=>{customElements.define(r.default.tag,r.default),customElements.define(s.default.tag,s.default),customElements.define(a.default.tag,a.default),customElements.define(l.default.tag,l.default),customElements.define(o.default.tag,o.default)},this.prependAppend=()=>window.addEventListener("DOMContentLoaded",(e=>{this.prependNav(),this.appendFooter()})),this.prependNav=()=>document.body.prepend(document.createElement("fanaro-nav")),this.appendFooter=()=>{this.article=document.querySelector("article"),this.articleContainsFootnotes&&this.article.append(document.createElement("article-footer"))},this.define(),this.prependAppend()}get articleContainsFootnotes(){return null!=this.article&&this.article.querySelectorAll("foot-note").length>0}}},587:(e,t)=>{var i,n;Object.defineProperty(t,"__esModule",{value:!0}),t.articlesMetadata=t.Topic=t.Language=void 0,function(e){e.english="English",e.portuguese="Português",e.french="Français"}(i=t.Language||(t.Language={})),function(e){e.go="Go",e.tsumego="Tsumego",e.joseki="Joseki",e.goVariants="Go Variants",e.review="Review",e.philosophy="Philosophy",e.meta="Meta",e.logic="Logic",e.social="Social",e.politics="Politics",e.history="History",e.productivity="Productivity",e.psychology="Psychology",e.math="Math",e.browserExtension="Browser Extension",e.programming="Programming",e.dart="Dart",e.flutter="Flutter",e.design="Design",e.uiUx="UI/UX",e.language="Language",e.literature="Literature",e.writing="Writing",e.quotes="Quotes",e.books="Books",e.myYouTubeChannel="My YouTube Channel",e.sports="Sports",e.comedy="Comedy",e.health="Health"}(n=t.Topic||(t.Topic={})),t.articlesMetadata=[{index:108,title:"My New Website | Meu Novo Site",link:"/articles/new_site/new_site.html",date:Date.UTC(2020,11,20),language:i.english,mainTopic:n.meta,otherTopics:[n.design]},{index:107,title:"Revisão com Amir Fragman",link:"/articles/revisao_amir/revisao_amir.html",date:Date.UTC(2020,11,5),language:i.portuguese,mainTopic:n.go,otherTopics:[n.review,n.myYouTubeChannel]},{index:106,title:"OGS Kbd Nav",link:"/articles/ogs_kbd_nav/ogs_kbd_nav.html",date:Date.UTC(2020,10,28),language:i.english,mainTopic:n.productivity,otherTopics:[n.go,n.browserExtension,n.myYouTubeChannel]},{index:105,title:"Tips and Advice on Go Etiquette",link:"/articles/go_etiquette/go_etiquette.html",date:Date.UTC(2020,10,22),language:i.english,mainTopic:n.go,otherTopics:[n.psychology,n.myYouTubeChannel]},{index:104,title:"YouTube Kbd Nav",link:"/articles/youtube_kbd_nav/youtube_kbd_nav.html",date:Date.UTC(2020,8,29),language:i.english,mainTopic:n.productivity,otherTopics:[n.browserExtension,n.myYouTubeChannel]},{index:103,title:"Recursion: Fibonacci in Go",link:"/articles/recursion_fibonacci_in_go/recursion_fibonacci_in_go.html",date:Date.UTC(2020,7,17),language:i.english,mainTopic:n.go,otherTopics:[n.tsumego,n.math,n.myYouTubeChannel]},{index:102,title:"Tradução de um Vídeo da BIBA Baduk",link:"/articles/traducao_biba/traducao_biba.html",date:Date.UTC(2020,7,16),language:i.portuguese,mainTopic:n.go,otherTopics:[n.review,n.myYouTubeChannel]},{index:101,title:"Etimologia da Palavra Carro",link:"/articles/etimologia_carro/etimologia_carro.html",date:Date.UTC(2020,7,11),language:i.portuguese,mainTopic:n.language,otherTopics:[]},{index:100,title:"Os Grandes Debates de Joseki: Aula com Thiago Sinji Ramos",link:"/articles/joseki_debates_sinji/joseki_debates_sinji.html",date:Date.UTC(2020,7,7),language:i.portuguese,mainTopic:n.go,otherTopics:[n.books,n.joseki,n.myYouTubeChannel]},{index:99,title:"Quote #3 - Martin Fowler on Good Code",link:"/articles/quote_3_fowler/quote_3_fowler.html",date:Date.UTC(2020,5,28),language:i.english,mainTopic:n.programming,otherTopics:[n.productivity,n.quotes]},{index:98,title:"DeepL: Traduza Meus Artigos",link:"/articles/deepl/deepl.html",date:Date.UTC(2020,4,20),language:i.portuguese,mainTopic:n.language,otherTopics:[]},{index:97,title:'"Less Code" Print Design',link:"/articles/less_code/less_code.html",date:Date.UTC(2020,3,19),language:i.english,mainTopic:n.programming,otherTopics:[n.design]},{index:96,title:"Print Designs for My Aunt",link:"/articles/design_aunt/design_aunt.html",date:Date.UTC(2020,3,18),language:i.english,mainTopic:n.design,otherTopics:[]},{index:95,title:"(My) Dart Katas",link:"/articles/dart_katas/dart_katas.html",date:Date.UTC(2020,3,11),language:i.english,mainTopic:n.programming,otherTopics:[n.dart,n.flutter]},{index:94,title:"Avoid Spaghetti Theming",link:"/articles/spaghetti_theming/spaghetti_theming.html",date:Date.UTC(2020,3,4),language:i.english,mainTopic:n.uiUx,otherTopics:[n.programming,n.design,n.dart,n.flutter]},{index:93,title:"Musashi, Craftsmanship and The Critical Moment",link:"/articles/musashi/musashi.html",date:Date.UTC(2020,3,1),language:i.english,mainTopic:n.philosophy,otherTopics:[n.programming,n.design,n.go,n.sports]},{index:92,title:"My Dad's Logo",link:"/articles/dad_logo/dad_logo.html",date:Date.UTC(2020,3,1),language:i.english,mainTopic:n.design,otherTopics:[]},{index:91,title:"A Weightlifting Logo",link:"/articles/weightlifting_logo/weightlifting_logo.html",date:Date.UTC(2020,3,1),language:i.english,mainTopic:n.design,otherTopics:[n.sports,n.myYouTubeChannel]},{index:90,title:"Anti Bullshit Bullshit Club",link:"/articles/anti_bullshit_logo/anti_bullshit_logo.html",date:Date.UTC(2020,2,17),language:i.english,mainTopic:n.design,otherTopics:[n.comedy]},{index:89,title:"DIY Minimalist Portrait",link:"/articles/diy_minimalist_portrait/diy_minimalist_portrait.html",date:Date.UTC(2020,1,26),language:i.english,mainTopic:n.design,otherTopics:[n.comedy]},{index:88,title:"Please Stop this Fallacy",link:"/articles/fallacy_against_communism/fallacy_against_communism.html",date:Date.UTC(2020,1,10),language:i.english,mainTopic:n.logic,otherTopics:[n.politics,n.history,n.philosophy]},{index:87,title:"My Twitter: @PFanaro",link:"/articles/my_twitter/my_twitter.html",date:Date.UTC(2020,0,20),language:i.english,mainTopic:n.social,otherTopics:[n.meta]},{index:86,title:"KG-LBS Converter",link:"/articles/kg_lbs_converter/kg_lbs_converter.html",date:Date.UTC(2019,11,30),language:i.english,mainTopic:n.math,otherTopics:[n.sports,n.design]},{index:85,title:"Universal Principles of Design",link:"/articles/universal_principles_design/universal_principles_design.html",date:Date.UTC(2019,11,2),language:i.english,mainTopic:n.design,otherTopics:[n.uiUx]},{index:84,title:"Quote #2 - Stalin on Elections",link:"/articles/quote_2_stalin/quote_2_stalin.html",date:Date.UTC(2019,10,18),language:i.english,mainTopic:n.politics,otherTopics:[n.philosophy,n.logic,n.psychology,n.history,n.meta]},{index:83,title:"Quote #1 - Dorothy Parker on What Writing Is",link:"/articles/quote_1_parker/quote_1_parker.html",date:Date.UTC(2019,11,2),language:i.english,mainTopic:n.writing,otherTopics:[n.productivity,n.language,n.meta]},{index:82,title:"Tetris Go",link:"/articles/tetris_go/tetris_go.html",date:Date.UTC(2019,8,7),language:i.portuguese,mainTopic:n.go,otherTopics:[n.goVariants,n.myYouTubeChannel]},{index:81,title:"Scrum (Part 2)",link:"/articles/scrum_2/scrum_2.html",date:Date.UTC(2019,8,3),language:i.english,mainTopic:n.productivity,otherTopics:[n.psychology,n.programming]},{index:80,title:"Simão Gonçalves [4-5d EGF] vs Philippe Fanaro [2k-2d KGS]",link:"/articles/simao_goncalves_vs_philippe_fanaro/simao_goncalves_vs_philippe_fanaro.html",date:Date.UTC(2019,8,1),language:i.portuguese,mainTopic:n.go,otherTopics:[n.review,n.myYouTubeChannel]},{index:79,title:"Scrum (Part 1)",link:"/articles/scrum_1/scrum_1.html",date:Date.UTC(2019,7,21),language:i.english,mainTopic:n.productivity,otherTopics:[n.psychology,n.programming]},{index:78,title:"Less Pain in the Office",link:"/articles/less_pain_office/less_pain_office.html",date:Date.UTC(2019,7,3),language:i.english,mainTopic:n.health,otherTopics:[n.productivity,n.programming]},{index:77,title:"My VS Code Settings",link:"/articles/my_vs_code_settings/my_vs_code_settings.html",date:Date.UTC(2019,6,28),language:i.english,mainTopic:n.programming,otherTopics:[n.productivity]},{index:76,title:"Fluent Forever",link:"/articles/fluent_forever/fluent_forever.html",date:Date.UTC(2019,6,4),language:i.english,mainTopic:n.language,otherTopics:[n.productivity,n.psychology]},{index:75,title:"Macunaíma",link:"/articles/macunaima/macunaima.html",date:Date.UTC(2019,5,21),language:i.portuguese,mainTopic:n.literature,otherTopics:[n.language]}]},607:function(e,t,i){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),new(n(i(729)).default)}},t={};!function i(n){if(t[n])return t[n].exports;var o=t[n]={exports:{}};return e[n].call(o.exports,o,o.exports,i),o.exports}(607)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,