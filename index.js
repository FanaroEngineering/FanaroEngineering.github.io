(()=>{"use strict";var e={692:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0});class i extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML=i.template;const e=document.querySelectorAll("sub"),t=this.querySelector("footer"),n=e.length;for(let i=0;i<n;i++)t.appendChild(e[i]),t.append(document.createElement("br"))}}t.default=i,i.tag="article-footer",i.template="    \n    <br />\n    <br />\n    <br />\n    <hr />\n    <footer></footer>\n  "},109:function(e,t,i){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=i(587),o=n(i(576));class s extends HTMLElement{constructor(){super(),this.article={index:0,title:"",link:"",date:0,languages:[a.Language.english],mainTopic:a.Topic.go,otherTopics:[a.Topic.go]},this.tr=document.createElement("tr"),this.rowIndex=()=>{const e=document.createElement("td");e.innerHTML=this.article.index.toString(),this.tr.append(e)},this.rowArticle=()=>{const e=document.createElement("td");e.append(new o.default(this.article.link,this.article.title)),this.tr.append(e)},this.rowDate=()=>{const e=document.createElement("td"),t=new Date(this.article.date);e.append(`${t.toLocaleDateString("default",{month:"short"})} ${t.getDate()}, ${t.getFullYear()}`),this.tr.append(e)},this.rowLanguages=()=>{const e=document.createElement("td"),t=this.concatenator(this.article.languages);e.append(t),this.tr.append(e)},this.rowMainTopic=()=>{const e=document.createElement("td");e.append(this.article.mainTopic.toString()),this.tr.append(e)},this.concatenator=e=>0==e.length?String.fromCharCode(8212):e.join(", "),this.rowOtherTopics=()=>{const e=document.createElement("td"),t=this.concatenator(this.article.otherTopics);e.append(t),this.tr.append(e)}}connectedCallback(){this.innerHTML=s.template;const e=this.querySelector("tbody");a.articlesMetadata.forEach((t=>{this.article=t,this.tr=document.createElement("tr"),this.rowIndex(),this.rowDate(),this.rowLanguages(),this.rowArticle(),this.rowMainTopic(),this.rowOtherTopics(),e.append(this.tr)}))}}t.default=s,s.tag="articles-table",s.template="\n    <table>\n      <caption>Articles</caption>\n      <thead>\n        <th>#</th>\n        <th>Date</th>\n        <th>Languages</th>\n        <th>Article</th>\n        <th>Main Topic</th>\n        <th>Other Topics</th>\n      </thead>\n      <tbody></tbody>\n    </table>\n  "},384:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0});class i extends HTMLElement{constructor(){super()}connectedCallback(){this.innerHTML=i.template}}t.default=i,i.tag="fanaro-nav",i.template='  \n    <nav>\n      <a href="/">\n        <img height="50" src="/assets/logo_400.png" />\n        <h1>fanaro.io</h1>\n      </a>\n    </nav>\n  '},506:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0});class i extends HTMLElement{constructor(e=""){super(),this._text="",this.index=1,this.calculateNextIndex=()=>{const e=document.querySelector("article").querySelectorAll("foot-note").length;this.index=e},this.editSup=()=>{const e=this.querySelector("a");e.innerHTML=this.index.toString(),e.href="#footnote-"+this.index.toString(),this.querySelector("sup").id="footnote-base-"+this.index.toString()},this.editSub=()=>{const e=document.createElement("a");e.innerHTML=this.index.toString(),e.href="#footnote-base-"+this.index.toString(),e.style.color="#D9C07B";const t=document.createElement("sub");t.id="footnote-"+this.index.toString(),t.innerHTML=": "+this._text,t.prepend(e),document.querySelector("article").append(t)},this.hover=()=>{if(!this.doesDivAlreadyExist){const e=document.createElement("p");e.innerHTML=this._text,e.id="footnote-hover-"+this.index,e.className="footnote-hover",e.onmouseleave=()=>e.remove(),this.append(e)}},this.onmouseenter=this.hover,this._text=e}get text(){return this._text}connectedCallback(){this.innerHTML=i.template,""==this._text&&(this._text=this.getAttribute("text")),this.calculateNextIndex(),this.editSup(),this.editSub()}get doesDivAlreadyExist(){return null!=this.querySelector(`p#footnote-hover-${this.index}`)}}t.default=i,i.tag="foot-note",i.template="   \n    <sup><a></a></sup>\n  "},576:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0});class i extends HTMLElement{constructor(e="",t=""){super(),this._link=e,this._text=t}get link(){return this._link}get text(){return this._text}connectedCallback(){this.innerHTML=i.template,""!=this._link&&""!=this._text||(this._link=this.getAttribute("link"),this._text=this.getAttribute("text"));const e=this.querySelector("a");e.href=this._link,e.innerHTML=this._text}}t.default=i,i.tag="local-link",i.template="    \n    <a></a>\n  "},665:function(e,t,i){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.CustomH3=t.CustomH2=void 0;const a=n(i(576));class o extends HTMLElement{constructor(){super(),this.hr=()=>{const e=document.createElement("hr");e.style.marginTop="20px",this.prepend(e),this.append(document.createElement("hr"))},this.appendH2s=()=>{const e=document.createElement("ol");document.querySelectorAll("section").forEach((t=>{const i=t.querySelector("h2"),n=document.createElement("li"),o=new a.default("#"+i?.id,this.stripNumberedPrefix(i?.innerHTML));n.append(o),n.append(this.appendH3s(t)),e.append(n)})),this.append(e)},this.stripNumberedPrefix=(e="")=>e.split(" ").slice(1).join(" "),this.appendH3s=e=>{const t=document.createElement("ol");return e.querySelectorAll("h3").forEach((e=>{const i=document.createElement("li"),n=new a.default("#"+e?.id,this.stripNumberedPrefix(e?.innerHTML));i.append(n),t.append(i)})),t},this.prependHeading=()=>{const e=document.createElement("h2");e.innerHTML="Table of Contents",this.prepend(e)}}connectedCallback(){this.appendH2s(),this.prependHeading(),this.hr()}}var s;t.default=o,o.tag="table-of-contents",function(e){e.h2="h2",e.h3="h3"}(s||(s={}));class r extends HTMLElement{constructor(e=""){super(),this.text=e}connectedCallback(){""==this.text&&(this.text=this.getAttribute("text")),this.innerHTML=r.template,this.order()}order(){const e=this.querySelector("h2"),t=r.countHeadings().toString()+". "+this.text;e.innerHTML=t,e.id=t.toLowerCase().replaceAll(".","").replaceAll(" ","-")}}t.CustomH2=r,r.tag="custom-h2",r.template="\n    <h2></h2>\n  ",r.countHeadings=(e=s.h2)=>{const t=document.querySelectorAll(e);return null==t?0:t.length};class l extends r{constructor(e=""){super(e)}connectedCallback(){""==this.text&&(this.text=this.getAttribute("text")),this.innerHTML=l.template,this.order()}order(){const e=this.querySelector("h3"),t=l.extractUpperHeading()+r.countHeadings(s.h3).toString()+". "+this.text;e.innerHTML=t,e.id=t.toLowerCase().replaceAll(" ","-").replaceAll(".","")}}t.CustomH3=l,l.tag="custom-h3",l.template="\n    <h3></h3>\n  ",l.extractUpperHeading=(e=s.h2)=>{const t=document.querySelectorAll(e);return t[t.length-1].innerText.split(" ")[0]}},587:(e,t)=>{var i,n;Object.defineProperty(t,"__esModule",{value:!0}),t.articlesMetadata=t.Topic=t.Language=void 0,function(e){e.english="English",e.portuguese="Português",e.french="Français"}(i=t.Language||(t.Language={})),function(e){e.go="Go",e.tsumego="Tsumego",e.joseki="Joseki",e.goVariants="Go Variants",e.review="Review",e.philosophy="Philosophy",e.meta="Meta",e.logic="Logic",e.social="Social",e.politics="Politics",e.history="History",e.productivity="Productivity",e.psychology="Psychology",e.math="Math",e.browserExtension="Browser Extension",e.programming="Programming",e.dart="Dart",e.flutter="Flutter",e.design="Design",e.uiUx="UI/UX",e.language="Language",e.literature="Literature",e.writing="Writing",e.quotes="Quotes",e.books="Books",e.myYouTubeChannel="My YouTube Channel",e.sports="Sports",e.comedy="Comedy",e.health="Health"}(n=t.Topic||(t.Topic={})),t.articlesMetadata=[{index:110,title:"A Github Table of Contents Hack",link:"/articles/github_toc_hack/github_toc_hack.html",date:Date.UTC(2021,0,5),languages:[i.english],mainTopic:n.design,otherTopics:[n.design]},{index:109,title:"Murugandi's Fighting Spirit Design",link:"/articles/murugandi/murugandi.html",date:Date.UTC(2020,11,21),languages:[i.english,i.portuguese],mainTopic:n.go,otherTopics:[n.design,n.design]},{index:108,title:"My New Website | Meu Novo Site",link:"/articles/new_site/new_site.html",date:Date.UTC(2020,11,20),languages:[i.english,i.portuguese],mainTopic:n.meta,otherTopics:[n.design]},{index:107,title:"Revisão com Amir Fragman",link:"/articles/revisao_amir/revisao_amir.html",date:Date.UTC(2020,11,5),languages:[i.portuguese],mainTopic:n.go,otherTopics:[n.review,n.myYouTubeChannel]},{index:106,title:"OGS Kbd Nav",link:"/articles/ogs_kbd_nav/ogs_kbd_nav.html",date:Date.UTC(2020,10,28),languages:[i.english,i.portuguese],mainTopic:n.productivity,otherTopics:[n.go,n.browserExtension,n.myYouTubeChannel]},{index:105,title:"Tips and Advice on Go Etiquette",link:"/articles/go_etiquette/go_etiquette.html",date:Date.UTC(2020,10,22),languages:[i.english,i.portuguese],mainTopic:n.go,otherTopics:[n.psychology,n.myYouTubeChannel]},{index:104,title:"YouTube Kbd Nav",link:"/articles/youtube_kbd_nav/youtube_kbd_nav.html",date:Date.UTC(2020,8,29),languages:[i.english],mainTopic:n.productivity,otherTopics:[n.browserExtension,n.myYouTubeChannel]},{index:103,title:"Recursion: Fibonacci in Go",link:"/articles/recursion_fibonacci_in_go/recursion_fibonacci_in_go.html",date:Date.UTC(2020,7,17),languages:[i.english,i.portuguese],mainTopic:n.go,otherTopics:[n.tsumego,n.math,n.myYouTubeChannel]},{index:102,title:"Tradução de um Vídeo da BIBA Baduk",link:"/articles/traducao_biba/traducao_biba.html",date:Date.UTC(2020,7,16),languages:[i.portuguese],mainTopic:n.go,otherTopics:[n.review,n.myYouTubeChannel]},{index:101,title:"Etimologia da Palavra Carro",link:"/articles/etimologia_carro/etimologia_carro.html",date:Date.UTC(2020,7,11),languages:[i.portuguese],mainTopic:n.language,otherTopics:[]},{index:100,title:"Os Grandes Debates de Joseki: Aula com Thiago Sinji Ramos",link:"/articles/joseki_debates_sinji/joseki_debates_sinji.html",date:Date.UTC(2020,7,7),languages:[i.portuguese],mainTopic:n.go,otherTopics:[n.books,n.joseki,n.myYouTubeChannel]},{index:99,title:"Quote #3 - Martin Fowler on Good Code",link:"/articles/quote_3_fowler/quote_3_fowler.html",date:Date.UTC(2020,5,28),languages:[i.english],mainTopic:n.programming,otherTopics:[n.productivity,n.quotes]},{index:98,title:"DeepL: Traduza Meus Artigos",link:"/articles/deepl/deepl.html",date:Date.UTC(2020,4,20),languages:[i.portuguese,i.english,i.french],mainTopic:n.language,otherTopics:[]},{index:97,title:'"Less Code" Print Design',link:"/articles/less_code/less_code.html",date:Date.UTC(2020,3,19),languages:[i.english],mainTopic:n.programming,otherTopics:[n.design]},{index:96,title:"Print Designs for My Aunt",link:"/articles/design_aunt/design_aunt.html",date:Date.UTC(2020,3,18),languages:[i.english],mainTopic:n.design,otherTopics:[]},{index:95,title:"(My) Dart Katas",link:"/articles/dart_katas/dart_katas.html",date:Date.UTC(2020,3,11),languages:[i.english],mainTopic:n.programming,otherTopics:[n.dart,n.flutter]},{index:94,title:"Avoid Spaghetti Theming",link:"/articles/spaghetti_theming/spaghetti_theming.html",date:Date.UTC(2020,3,4),languages:[i.english],mainTopic:n.uiUx,otherTopics:[n.programming,n.design,n.dart,n.flutter]},{index:93,title:"Musashi, Craftsmanship and The Critical Moment",link:"/articles/musashi/musashi.html",date:Date.UTC(2020,3,1),languages:[i.english],mainTopic:n.philosophy,otherTopics:[n.programming,n.design,n.go,n.sports]},{index:92,title:"My Dad's Logo",link:"/articles/dad_logo/dad_logo.html",date:Date.UTC(2020,3,1),languages:[i.english],mainTopic:n.design,otherTopics:[]},{index:91,title:"A Weightlifting Logo",link:"/articles/weightlifting_logo/weightlifting_logo.html",date:Date.UTC(2020,3,1),languages:[i.english],mainTopic:n.design,otherTopics:[n.sports,n.myYouTubeChannel]},{index:90,title:"Anti Bullshit Bullshit Club",link:"/articles/anti_bullshit_logo/anti_bullshit_logo.html",date:Date.UTC(2020,2,17),languages:[i.english],mainTopic:n.design,otherTopics:[n.comedy]},{index:89,title:"DIY Minimalist Portrait",link:"/articles/diy_minimalist_portrait/diy_minimalist_portrait.html",date:Date.UTC(2020,1,26),languages:[i.english],mainTopic:n.design,otherTopics:[n.comedy]},{index:88,title:"Please Stop this Fallacy",link:"/articles/fallacy_against_communism/fallacy_against_communism.html",date:Date.UTC(2020,1,10),languages:[i.english],mainTopic:n.logic,otherTopics:[n.politics,n.history,n.philosophy]},{index:87,title:"My Twitter: @PFanaro",link:"/articles/my_twitter/my_twitter.html",date:Date.UTC(2020,0,20),languages:[i.english],mainTopic:n.social,otherTopics:[n.meta]},{index:86,title:"KG-LBS Converter",link:"/articles/kg_lbs_converter/kg_lbs_converter.html",date:Date.UTC(2019,11,30),languages:[i.english],mainTopic:n.math,otherTopics:[n.sports,n.design]},{index:85,title:"Universal Principles of Design",link:"/articles/universal_principles_design/universal_principles_design.html",date:Date.UTC(2019,11,2),languages:[i.english],mainTopic:n.design,otherTopics:[n.uiUx]},{index:84,title:"Quote #2 - Stalin on Elections",link:"/articles/quote_2_stalin/quote_2_stalin.html",date:Date.UTC(2019,10,18),languages:[i.english],mainTopic:n.politics,otherTopics:[n.philosophy,n.logic,n.psychology,n.history,n.meta]},{index:83,title:"Quote #1 - Dorothy Parker on What Writing Is",link:"/articles/quote_1_parker/quote_1_parker.html",date:Date.UTC(2019,11,2),languages:[i.english],mainTopic:n.writing,otherTopics:[n.productivity,n.language,n.meta]},{index:82,title:"Tetris Go",link:"/articles/tetris_go/tetris_go.html",date:Date.UTC(2019,8,7),languages:[i.portuguese],mainTopic:n.go,otherTopics:[n.goVariants,n.myYouTubeChannel]},{index:81,title:"Scrum (Part 2)",link:"/articles/scrum_2/scrum_2.html",date:Date.UTC(2019,8,3),languages:[i.english],mainTopic:n.productivity,otherTopics:[n.psychology,n.programming]},{index:80,title:"Simão Gonçalves [4-5d EGF] vs Philippe Fanaro [2k-2d KGS]",link:"/articles/simao_goncalves_vs_philippe_fanaro/simao_goncalves_vs_philippe_fanaro.html",date:Date.UTC(2019,8,1),languages:[i.portuguese],mainTopic:n.go,otherTopics:[n.review,n.myYouTubeChannel]},{index:79,title:"Scrum (Part 1)",link:"/articles/scrum_1/scrum_1.html",date:Date.UTC(2019,7,21),languages:[i.english],mainTopic:n.productivity,otherTopics:[n.psychology,n.programming]},{index:78,title:"Less Pain in the Office",link:"/articles/less_pain_office/less_pain_office.html",date:Date.UTC(2019,7,3),languages:[i.english],mainTopic:n.health,otherTopics:[n.productivity,n.programming]},{index:77,title:"My VS Code Settings",link:"/articles/my_vs_code_settings/my_vs_code_settings.html",date:Date.UTC(2019,6,28),languages:[i.english],mainTopic:n.programming,otherTopics:[n.productivity]},{index:76,title:"Fluent Forever",link:"/articles/fluent_forever/fluent_forever.html",date:Date.UTC(2019,6,4),languages:[i.english],mainTopic:n.language,otherTopics:[n.productivity,n.psychology]},{index:75,title:"Macunaíma",link:"/articles/macunaima/macunaima.html",date:Date.UTC(2019,5,21),languages:[i.portuguese],mainTopic:n.literature,otherTopics:[n.language]},{index:74,title:"Say Hello to My AI Friend",link:"/articles/say_hello_to_my_ai_friend/say_hello_to_my_ai_friend.html",date:Date.UTC(2019,4,11),languages:[i.portuguese,i.english],mainTopic:n.go,otherTopics:[n.comedy,n.meta]}]},607:function(e,t,i){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),new(n(i(885)).default)},885:function(e,t,i){var n=this&&this.__createBinding||(Object.create?function(e,t,i,n){void 0===n&&(n=i),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[i]}})}:function(e,t,i,n){void 0===n&&(n=i),e[n]=t[i]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)"default"!==i&&Object.prototype.hasOwnProperty.call(e,i)&&n(t,e,i);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=s(i(109)),l=s(i(692)),c=s(i(384)),u=s(i(506)),h=s(i(576)),d=o(i(665));t.default=class{constructor(){this.define=()=>{customElements.define(h.default.tag,h.default),customElements.define(u.default.tag,u.default),customElements.define(l.default.tag,l.default),customElements.define(c.default.tag,c.default),customElements.define(r.default.tag,r.default),customElements.define(d.default.tag,d.default),customElements.define(d.CustomH2.tag,d.CustomH2),customElements.define(d.CustomH3.tag,d.CustomH3)},this.prependAppend=()=>window.addEventListener("DOMContentLoaded",(e=>{this.prependNav(),this.appendFooter(),this.prependToc()})),this.prependNav=()=>document.body.prepend(document.createElement("fanaro-nav")),this.appendFooter=()=>{this.articleContainsFootnotes&&this.article.append(document.createElement("article-footer"))},this.prependToc=()=>{const e=this.article?.querySelector("h1");document.querySelectorAll("h2").length>0&&e.parentNode?.insertBefore(document.createElement("table-of-contents"),e.previousSibling)},this.define(),this.prependAppend()}get article(){return document.querySelector("article")}get articleContainsFootnotes(){return null!=this.article&&this.article.querySelectorAll("foot-note").length>0}}}},t={};!function i(n){if(t[n])return t[n].exports;var a=t[n]={exports:{}};return e[n].call(a.exports,a,a.exports,i),a.exports}(607)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,